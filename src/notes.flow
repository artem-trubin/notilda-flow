import material/material;
import material/material_dialog;
import math/crypto;

// import src/state;

export {
  Note(
    id : string,
    text : string,
  );

  addNote(
    text : string,
    onDone : (Note) -> void
  ) -> void;
  editNote(
    note : Note,
    newText : string,
    onDone : (Note) -> void,
  ) -> void;

  makeNoteCard(note : Note) -> MCard;
  // makeAddNoteDialog(state : State) -> void;
}

addNote(
  text : string,
  onDone : (Note) -> void
) -> void {
  newId = generateUID("", "", 16);

  // Here should be code that creates a Note in the database
  // It should call the onDone callback when it gets OK
  // response from the query.

  note = Note(newId, text);

  onDone(note)
}

editNote(
  note : Note,
  newText : string,
  onDone : (Note) -> void
) -> void {
  newNote = Note(note with text = newText);

  onDone(newNote)
}

makeNoteCard(note : Note) -> MCard {
  noteText = MSupportingTextBlock(
    note.text,
    []
  );

  blocks = [noteText];
  style = [];
  state = [];

  MCard(blocks, style, state)
}

// makeAddNoteDialog(state : State) -> void {
//   closeWhenB = make(false);

//   addNewNoteButton = MTextButton(
//     "Create",
//     \ -> {
//       makeNote("Some text");
//       next(closeWhenB, true);
//     },
//     [],
//     []
//   )

//   actions = [
//     addNewNoteButton,
//     MTextButton("Cancel", \ -> { next(closeWhenB, true) }, [], []),
//   ];

//   style = [
//     MDialogUseFrame(),
//     MDialogTitle("Create New Note"),
//     MDialogActions(actions)
//   ];
//   content = MText("Test", []);

//   ShowMDialog(
//     manager,
//     closeWhenB,
//     style,
//     content
//   )
// }
