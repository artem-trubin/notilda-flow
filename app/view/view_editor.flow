import app/globals;
import app/note/note;
import app/note/note_helpers;
import app/state/state;
import app/view/view;

export {
  makeViewEditor(
    state : NotildaState,
  ) -> Material;
}

makeViewEditor(
  state : NotildaState,
) -> Material {
  MSelect(state.currentNoteB, \note -> {
    noteTitleB = make(note.title);
    noteTextB = make(note.text);
    expander = MFixedY(16.0);
    isNoteNew = note.id == "";

    progressSavedB = fselect2(
      noteTitleB,
      noteTextB,
      FLift2(\noteTitle, noteText -> {
        noteTitle == note.title && noteText == note.text && !isNoteNew
      })
    );

    saveButtonToolTipB = fselect(
      progressSavedB,
      FLift(\saved -> {
        if (saved) "No changes to save" else ""
      }),
    );

    saveNote = \ -> {
      addOrUpdateNote(
        state,
        Note(
          note with
          title = getValue(noteTitleB),
          text = getValue(noteTextB)
        )
      );
      resetCurrentNote(state);
      nextDistinct(state.currentViewB, ViewList());
    }

    titleText = MText(
      "Note" + if (debugOn) formatString(" [%1]", [note.id]) else "",
      []
    );

    savedIndicator = MSelect(
      progressSavedB,
      \saved -> {
        MText(
          if (saved) "All changes are saved"
          else "There are unsaved changes",
          [
            if (saved) MGrey(500)
            else MErrorColor(),
          ]
        )
      }
    )

    viewTitle = MColsYCenterA([
      titleText,
      MFixedX(16.0),
      savedIndicator,
    ]);

    titleInput = MTextInput(
      noteTitleB,
      [
        MOutlined(),
      ],
      [],
    );

    textInput = MTextInput(
      noteTextB,
      [
        Multiline(true),
        MMaxLines(10),
        MOutlined(),
      ],
      []
    );

    saveButton = MSelect2(
      progressSavedB,
      saveButtonToolTipB,
      \saved, tooltipText, -> {
        button = MTextButton(
          "SAVE",
          saveNote,
          [],
          [
            MEnabled(const(!saved))
          ]
        );

        if (!saved) {
          button;
        } else {
          MTooltip(
            button,
            MText(tooltipText, []),
            []
          );
        }
      }
    )

    buttonsBlock = MColsA([
      MFillX(),
      saveButton,
    ]);

    MBorder4(
      16.0,
      MLinesA([
        viewTitle,
        expander,
        titleInput,
        expander,
        textInput,
        expander,
        buttonsBlock,
      ])
    );
  });
}
